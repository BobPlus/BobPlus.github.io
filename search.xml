<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[与java的相爱相杀之旅]]></title>
    <url>%2F2019%2F06%2F11%2F%E4%B8%8Ejava%E7%9A%84%E7%9B%B8%E7%88%B1%E7%9B%B8%E6%9D%80%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[##运行机制梳理 ###访问权限 private：仅对本类可见，只有本类自身的方法才可以访问； public：对所有类可见，任何类任何方法均可以调用； protected：对本包和所有子类可见； 不加修饰符：对本包可见。###堆内存与栈内存所有的Java均在堆内存中构造###创建一个对象时的执行过程###多态在java中，对象变量是多台的，即一个对象变量可以指示多种实际类型的现象。###动态绑定一个对象变量在实际运行中自动地选择调用哪个方法的现象称为动态绑定。虚拟机根据变量实际引用的对象类型来确定调用相应的方法。###一个方法的调用过程对于调用x.f(args)，隐式参数x声明为类D的一个对象,C为D的超类。 编译器查看对象声明类型和方法名。一般情况下可能存在多个名字为f但参数类型不一的方法，这时编译器一一列举所有D类中名为f的方法和其超类中访问属性为public且名为f的方法。 编译器查看调用方法的参数类型，找到参数匹配的f方法后选择它，此过程又称为重载解析(overloading resolution)，由于此过程允许类型转换（数值表达式相互转换/子类转超类），所以只有经过转换仍无法找到一个方法或者找到了多个匹配方法时，编译器报错。 若为private、static、final方法或者构造器，编译器可准确找到需调用的方法，这种调用方式被称为静态绑定，而与之对应的是调用时依赖隐式参数x的实际类型，并在运行时实现动态绑定的调用方法。 当发生动态绑定调用时，虚拟机现在实际类型D中寻找，若找不到再在超类C中寻找，为了避免每次调用均进行搜索而产生的时间开销，虚拟机预先为每个类创建了一个方法表，列出所有方法的签名和实际调用的方法，在调用时仅在表中进行查询。若使用super.f(args)，编译器将直接对隐式参数x超类的方法表进行搜索。###类型强制转换对象引用的强制转换语法与数值表达式的类型转换类似子类可以强制转换父类，但父类向子类转换时，有一定的条件，比如其原先就属于子类，是被临时转换成父类的。###几个名词 class initializer类初始化器？。 class loader类加载器？。 concrete methods具体方法，非抽象的，所以所有的类方法（static）均属于此类； instance method实例方法，所以所有的类方法（static）均不属于此类； ##划重点 ###java.lang.Class和java.lang.Objectjava.lang.Class这个类用于记录Java中每个类的类型信息，并且jvm在类加载时会为每个类生成一个Class的Class对象在Java堆中，每个A类型的实例都要通过这个Class对象来进行实例化。 ##方法探究 ###Objects.equals(Object a, Object b)静态方法Objects.equals(Object a, Object b)其中的判定条件为a.equals(b)，具体又由a和b的类型决定，在具体类型中往往添加了覆盖Object.equals的equals方法。对于a和b的类型是String时，当且仅当a、b非null且具有相同的字符序列（对于细粒度的String类型比较，参考Collator？）；另外，equals与hashCode方法定义必须一致，如果a.equals(b)成立那么a与b应该返回相同的hash值，所以如果重新覆盖定义equals方法也往往需要重新定义hashCode方法。 ###Class getClass()getClass方法返回包含对象信息的类对象/运行时类对象。类对象的相等其往往作为类型equals方法的判定条件之一。 ##尚不明确的点？ getClass() 参考 https://www.jianshu.com/p/a509edc4fc08 private私有域一个类的实例可以不借助访问器而直接访问私有域吗？比如zb.name而不是zb.getName()？对于一个实例，调用所属类的方法时，可以任意的使用私有域，所以必要时应使用强制转换类型来通过编译。 instanceof操作符一个实例属于一个类或者其超类时，返回true。 String args[]public static void main(String args[])参数怎么来的 什么意思？]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>backend</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[叙利亚的哭声，谁在听？]]></title>
    <url>%2F2019%2F05%2F18%2F%E5%8F%99%E5%88%A9%E4%BA%9A%E7%9A%84%E5%93%AD%E5%A3%B0%EF%BC%8C%E8%B0%81%E5%9C%A8%E5%90%AC%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[一部纪录片最近看了一部17年的纪录片——《叙利亚的哭声》，影片以叙利亚内战发展过程为时间线，从普通人民的视角出发，以街拍视频和采访谈话的方式，真实地反映了叙利亚民众在多年内战下的精神与生活状态。图片较多，部分可能会引起不适。片头展现了一个逃离国家的3岁叙利亚男孩尸体，是海难、疾病或是饥饿带走了他年幼的生命，我们不得而知。 导火索2011年3月6日，叙利亚安全部队在德拉市逮捕了15名在墙壁上书写反对政府言辞的儿童，这些儿童在监狱中受到残酷虐待，甚至虐杀。后消息不胫而走，导致大马士革、阿勒颇、哈塞克、德拉以及哈马等城市的街头爆发了大规模反政府示威活动，期间有上万示威者在霍姆斯广场静坐，要求独裁政府总统巴沙尔下台。 局势发展在动荡不安局势的激化下，许多有组织的反对派逐渐形成，开始反抗巴沙尔政权的统治。伊朗、土耳其、俄罗斯、美国等各方势力也打着各种政治旗号卷入了这个国家的内战。而在各方势力的火力交织下，平民遭受的却是震惊世界、惨绝人寰的屠杀，不论是政府军、IS还是俄罗斯都对这块土地上的人民犯下了令人发指的罪行，IS向手无寸铁的平民举起屠刀、巴沙尔政府甚至对他们动用了化学武器。 现状持续多年的内战，留下的只有破碎的城市与伤痕累累的平民。许多平民无可奈何的走上了背井离乡之路，向欧洲及其他地区逃难，或被驱赶、或流离于市井街头。 感想最令我感到唏嘘的是，当一方国土有难、人民有难时，我们普通人或多或少会感到同情，大多数没有能力及精力去施展帮助的人会继续自己手头的事，对这些哭声慢慢淡忘以及遗忘，而有能力开展帮助的国家机器或是政府机构，给予这些受难国人民的往往不是救助，甚至是更多的伤害及迫害。这让我不免想到自己的国家在清末时各国被瓜分，自己的民族在抗战时被外族迫害的历史，再跳至整个人类历史的长河中，战争一次又一次的作为推进文明演化的工具，在数不尽的血肉之躯上，刻上逐渐淡去的烙印。或许，从第一个智人开始向一个无辜的动物下杀手来获取食物时，我们就都不再是无辜的了。]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>life-time</tag>
        <tag>impressions</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JQuery 源码解析]]></title>
    <url>%2F2019%2F05%2F15%2FJQuery-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[内置函数解析isPlainObject 摘抄源码如下：123456789101112131415161718var class2type = &#123;&#125;;var toString = class2type.toString; //返回表示该对象的字符串var getProto = Object.getPrototypeOf;//返回指定对象的原型,__proto__的值var hasOwn = class2type.hasOwnProperty; //返回一个布尔值，属于自身而不是原型为真var fnToString = hasOwn.toString; //此方法返回当前函数源代码的字符串var ObjectFunctionString = fnToString.call(Object);function isPlainObject(obj) &#123; var proto, Ctor; if (!obj || toString.call(obj) !== "[object Object]") &#123; return false; &#125; proto = getProto(obj); if (!proto) &#123; return true; &#125; Ctor = hasOwn.call(proto, "constructor") &amp;&amp; proto.constructor; return typeof Ctor === "function" &amp;&amp; fnToString.call(Ctor) === ObjectFunctionString;&#125; 首先判断参数是否为Object类型。使用逻辑或||的判断逻辑，在!obj为真（参数是空字符串、数值0、null、NaN、undefined）的情况下直接得到false的结果。然后使用了{}.toString方法(注意不是各个类型自身的toString方法)，彻底排除了Boolean、Number、String（以基本包装类型形式）及ES6新增的Symbol四种数据类型及Array、Date、RegExp、Function以及Math、Window这样的单体内置对象等引用类型; 然后判断参数是否为字面量创建的对象或者是以Object.prototype 为原型对象创建的对象。首先声明原型对象为null的对象是plainObject，即Object.create(null)。然后保存参数原型proto自身的构造函数（不能是继承来的）至变量Ctor，只有当其构造函数是函数类型（不能被改写成其他类型）且其函数源代码字符串与Object构造函数源代码一致时，为plainObject，也就是说其构造函数就是Object。]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>frontend</tag>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[稻城亚丁之旅]]></title>
    <url>%2F2019%2F05%2F08%2F%E7%A8%BB%E5%9F%8E%E4%BA%9A%E4%B8%81%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[去往稻城亚丁的路上2019年4月30日，我与老婆两人开启了稻城亚丁朝圣之旅。过了雅安、康定，就来到了中国最美的国道之一——318国道，沿途处处可见蓝天白云下，涤荡心灵尘埃的美景。全文图片较多，请在wifi下打开，土豪请随意。不时会看到路边骑自行车或走路的旅者，不由会对他们的信念与勇气产生敬意。走318国道，少不了的是公路自拍照，为了安全和不影响他人通过，我和老婆爬到了路边的护坡上，用相片记录下我们这一开心的时刻。为了赶路，我沿途尽量不停车，只能把景色收入眼底，待到了稻城古冰帽海子山时，我们停下了匆匆的脚步，用心感受这大自然的馈赠。 到了稻城县外，看到一处藏传佛教的白塔群，据说这是用来埋葬得道高僧的塔器，我虽对佛教的了解不多，但个人对其理解是佛教宗旨是教人提升内心的修为与境界，淡化名利与外在，故对塔器、金顶这些形式多少有些疑惑与排斥。我们是第二天傍晚到达的稻城县，在那吃了牦牛汤锅，价格不算低但分量确实够，后又继续开了一个半小时的盘山路到达了香格里拉小镇。夜晚的小镇宛如漆黑世界的一颗璀璨明珠，灯火通明，让人不由的感叹文明与财富的力量，唯有源源不断的旅客带来的经济才能刺激着当地的亚丁人忙碌到深夜。 稻城亚丁第三天一早我们便从小镇出发，前往稻城亚丁景区。这时我的高反已不那么明显，误以为自己已适应了高原环境，直到在亚丁景区坐着景区大巴沿着盘山路一直上行之时，查看了手机才发现小镇的海拔只有3k，而景区却已达4k以上。进入景区，首先映入眼帘的是一寺庙。为了节省体力与时间，我和老婆坐了景区通勤车直达洛绒草场，因季节未到，草还没有长好，可在此直接看到央迈勇雪山。 从洛绒草场前往牛奶海的路上，老婆因高反严重停下了脚步，在牛奶海与五色海交叉口处休息。由于时间不足，我便一人踏上剩下的路程，到达牛奶海时，恰逢冰雪交加的多变天气，我鼓足勇气，面对风雪记录下自己百感交集的表情。从牛奶海继续向五色海走，风雪式微，我遇见了雪山中的翡翠——美丽的五色海。 归途第四天我们开始返程，老婆的高反已不那么严重，从稻城县出来邂逅了一片美丽的杨树林，老婆已忍不住手舞足蹈起来。然后路过夏茹措、贡嘎雪山。第五天路过折多山，这一次我直接穿过熙熙攘攘的游客，独自向人迹罕至的山顶走去，到达山顶我感受到的是脱离尘世纷扰的宁静，可能这就是所谓的“空山”吧。看到许多矗立的石碓，我也捡起了一片石，并把它留在了一座石碓中，以此纪念自己登顶的毅力与勇气，老婆则找到一处经幡，留下了这一刻的虔诚。 回到重庆，闻友人已到，与之相会，倍感欣喜。]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>life-time</tag>
        <tag>tour</tag>
      </tags>
  </entry>
</search>
